plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id "androidx.navigation.safeargs.kotlin"
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.firebase-perf'
    id 'jacoco'
    id("org.jlleitschuh.gradle.ktlint") version "12.2.0"
    id("io.gitlab.arturbosch.detekt") version "1.23.8"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

kotlin {
    jvmToolchain(17)
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.tarasovvp.smartblocker"
        minSdk 29
        targetSdk 34
        versionCode 9
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.tarasovvp.smartblocker.HiltTestRunner"
        multiDexEnabled true
        buildConfigField('String', 'SERVER_CLIENT_ID', SERVER_CLIENT_ID)
        buildConfigField('String', 'REALTIME_DATABASE', REALTIME_DATABASE)
        buildConfigField('String', 'INTERSTITIAL_AD', INTERSTITIAL_AD)
        buildConfigField('String', 'APPS_FLYER_DEV_KEY', APPS_FLYER_DEV_KEY)
        versionNameSuffix '/Users/vladimirtarasov/Untitled'
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    signingConfigs {
        release {
            def propertiesFile = rootProject.file('gradle.properties')
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(propertiesFile))
            storeFile file(keystoreProperties['STORE_FILE'])
            storePassword keystoreProperties['STORE_PASSWORD']
            keyAlias keystoreProperties['KEY_FILE']
            keyPassword keystoreProperties['KEY_PASSWORD']
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    dataBinding {
        enabled = true
    }
    lint {
        disable 'ContentDescription'
    }
    namespace 'com.tarasovvp.smartblocker'

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
        }
    }
    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
        reports {
            html.required.set(true)
            xml.required.set(true)
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
        def coverageSourceDirs = [
                "src/main/java",
                "src/debug/java"
        ]
        additionalSourceDirs.setFrom(files(coverageSourceDirs))
        sourceDirectories.setFrom(files(coverageSourceDirs))

        def javaTree = fileTree(dir: "${project.buildDir}/build/intermediates/javac/debug")
        def kotlinTree = fileTree(dir: "${project.buildDir}/build/tmp/kotlin-classes/debug")
        classDirectories.from = files([javaTree], [kotlinTree])

        executionData.setFrom(fileTree(
                dir: "${project.buildDir}",
                includes: [
                        "jacoco/testDebugUnitTest.exec",
                        "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
                        "outputs/code-coverage/connected/*.ec"
                ]
        ))
    }
    buildFeatures {
        aidl true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "com.google.android.material:material:1.9.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.fragment:fragment-ktx:1.5.7"
    implementation "com.google.ar:core:1.41.0"

    //Testing
    implementation "junit:junit:4.13.2"
    implementation "androidx.arch.core:core-testing:2.2.0"
    implementation "androidx.test:rules:1.5.0"
    implementation "androidx.test.ext:junit:1.1.5"

    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation "io.mockk:mockk:1.13.7"
    testImplementation 'org.robolectric:robolectric:4.10.3'
    testImplementation "androidx.test.espresso:espresso-core:$espresso"
    testImplementation("androidx.test.espresso:espresso-contrib:$espresso") {
        exclude module: "protobuf-lite"
    }
    testImplementation "androidx.test.espresso:espresso-web:$espresso"
    testImplementation "androidx.test.espresso:espresso-intents:$espresso"
    testImplementation("androidx.test.espresso:espresso-accessibility:$espresso") {
        exclude module: "protobuf-lite"
    }
    testImplementation "androidx.fragment:fragment-testing:1.5.7"
    testImplementation "androidx.navigation:navigation-testing:2.5.3"

    androidTestImplementation "org.hamcrest:hamcrest:2.2"
    androidTestImplementation "io.mockk:mockk-android:1.13.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espresso") {
        exclude module: "protobuf-lite"
    }
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso"
    androidTestImplementation("androidx.test.espresso:espresso-accessibility:$espresso") {
        exclude module: "protobuf-lite"
    }
    androidTestImplementation "androidx.fragment:fragment-testing:1.5.7"
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.3"

    //GoogleServices
    implementation "com.google.android.gms:play-services-ads:22.1.0"
    implementation "com.google.android.gms:play-services-auth:20.5.0"
    implementation 'com.google.android.gms:play-services-wearable:17.0.0'

    //Review
    implementation "com.google.android.play:review:$review"
    implementation "com.google.android.play:review-ktx:$review"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.google.firebase:firebase-config-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-database-ktx"
    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'
    implementation "com.google.firebase:firebase-perf-ktx"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.navigation:navigation-testing:$navigation"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    //Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //Glide
    implementation "com.github.bumptech.glide:glide:4.15.1"
    kapt "com.github.bumptech.glide:compiler:4.15.1"

    //Room
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    implementation "net.zetetic:android-database-sqlcipher:4.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0"

    //Phone number
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.13'

    //Lottie
    implementation "com.airbnb.android:lottie:6.0.0"

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //Memory leak
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    //Apps Flyer
    implementation 'com.appsflyer:af-android-sdk:6.12.1'

    lintChecks(project(":lint-checks"))
}