name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  assemble_ui_test_artifacts:
    name: Build artifacts
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with: { java-version: 1.11 }

      - name: Build APK for UI test after Unit tests
        run: |
          ./gradlew test
          ./gradlew assembleDebug
          ./gradlew assembleDebugAndroidTest

      - name: Upload app-debug APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload app-debug-androidTest APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

      - name: Lint check
        run: ./gradlew lintDebug

  run_ui_tests_on_firebase:
    runs-on: ubuntu-20.04
    needs: assemble_ui_test_artifacts
    steps:
      - uses: actions/checkout@v2
      - name: Download app-debug APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download app-debug-androidTest APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest

      - name: Firebase auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.FIREBASE_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Set current project
        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run Instrumentation Tests in Firebase Test Lab
        run: |
          gcloud firebase test android models list
          gcloud firebase test android run --type instrumentation --use-orchestrator --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=redfin,version=30,locale=en,orientation=portrait --timeout 44m --environment-variables coverage=true

      - name: Download Test Results
        run: |
          TEST_RUN_ID=$(gcloud firebase test android describe --format="value(matrixId)" --type instrumentation)
          gsutil -m cp -R "gs://test-lab-RESULTS_BUCKET/RESULTS_DIRECTORY/$TEST_RUN_ID/" .

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./$TEST_RUN_ID

      - name: Convert Test Coverage Report to XML
        run: |
          ./gradlew jacocoTestReport

      - name: Commit and Push Test Coverage Report
        run: |
          git config --global user.name "TarasovVP"
          git config --global user.email "vptarasov1998@gmail.com"
          git checkout -b test-coverage-report
          cp path/to/your/jacoco-report.xml ./coverage-report.xml
          git add coverage-report.xml
          git commit -m "Update test coverage report"
          git push origin test-coverage-report

